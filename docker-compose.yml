volumes:
  beta-data:
    external: true
services:
  react:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi/app:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
  database:
    image: postgres:14.2-bullseye
    volumes:
      - beta-data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_MULTIPLE_DATABASES=inventory,sales,service,customer,finances,employees
      - POSTGRES_PASSWORD=test-databases
    ports:
      - 15432:5432
  customer-api:
    build:
      context: ./customer/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8091:8000"
    volumes:
      - ./customer/api:/app
    depends_on:
      - database
    environment:
      DATABASE_URL: postgres://customer:password@database:5432/customer
      WAIT_HOSTS: database:5432
      WAIT_TIMEOUT: 240
  inventory-api:
    build:
      context: ./inventory/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8100:8000"
    volumes:
      - ./inventory/api:/app
    depends_on:
      - database
    environment:
      DATABASE_URL: postgres://inventory:password@database:5432/inventory
      WAIT_HOSTS: database:5432
      WAIT_TIMEOUT: 240
  finances-api:
    build: 
      context: ./finances/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8092:8000"
    volumes:
      - ./finances/api:/app
    depends_on:
      - database
      - rabbitmq
    environment:
      DATABASE_URL: postgres://finances:password@database:5432/finances
      WAIT_HOSTS: database:5432
      WAIT_TIMEOUT: 240
  employees-api:
    build:
      context: ./employees/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8093:8000"
    volumes:
      - ./employees/api:/app
    depends_on:
      - database
      - rabbitmq
    environment:
      DATABASE_URL: postgres://employees:password@database:5432/employees
      WAIT_HOSTS: database:5432
      WAIT_TIMEOUT: 240
  service-api:
    build:
      context: ./service/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8080:8000"
    volumes:
      - ./service/api:/app
    depends_on:
      - database
      - rabbitmq
    environment:
      DATABASE_URL: postgres://service:password@database:5432/service
      WAIT_HOSTS: database:5432
      WAIT_TIMEOUT: 240
  service-poller:
    build:
      context: ./service/poll
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./service/poll:/app
      - ./service/api/service_project:/app/service_project
      - ./service/api/service_rest:/app/service_rest
    depends_on:
      - database
      - service-api
    environment:
      DATABASE_URL: postgres://service:password@database:5432/service
      WAIT_HOSTS: database:5432,service-api:8000
      WAIT_TIMEOUT: 240
  sales-api:
    build:
      context: ./sales/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8090:8000"
    volumes:
      - ./sales/api:/app
    depends_on:
      - database
      - rabbitmq
    environment:
      DATABASE_URL: postgres://sales:password@database:5432/sales
      WAIT_HOSTS: database:5432
      WAIT_TIMEOUT: 240
  rabbitmq:
    image: rabbitmq:3
  sales-poller:
    build:
      context: ./sales/poll
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./sales/poll:/app
      - ./sales/api/sales_project:/app/sales_project
      - ./sales/api/sales_rest:/app/sales_rest
    depends_on:
      - database
      - sales-api
    environment:
      DATABASE_URL: postgres://sales:password@database:5432/sales
      WAIT_HOSTS: database:5432,sales-api:8000
      WAIT_TIMEOUT: 240
  sales-pubsub:
    build:
      context: ./sales/pubsubsales
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./sales/pubsubsales:/app
      - ./sales/api/sales_project:/app/sales_project
      - ./sales/api/sales_rest:/app/sales_rest
    depends_on:
      - database
      - sales-api
      - rabbitmq
    environment:
      DATABASE_URL: postgres://sales:password@database:5432/sales
      WAIT_HOSTS: database:5432,sales-api:8000
      WAIT_TIMEOUT: 240
  services-pubsub:
    build:
      context: ./service/pubsubservices
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./service/pubsubservices:/app
      - ./service/api/service_project:/app/service_project
      - ./service/api/service_rest:/app/service_rest
    depends_on:
      - database
      - service-api
      - rabbitmq
    environment:
      DATABASE_URL: postgres://service:password@database:5432/service
      WAIT_HOSTS: database:5432,service-api:8000
      WAIT_TIMEOUT: 240
  finances-pubsub:
    build:
      context: ./finances/pubsubfinances
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./finances/pubsubfinances:/app
      - ./finances/api/finances_project:/app/finances_project
      - ./finances/api/finances_rest:/app/finances_rest    
    depends_on:
      - database
      - rabbitmq
      - finances-api
    environment:
      DATABASE_URL: postgres://finances:password@database:5432/finances
      WAIT_HOSTS: database:5432,finances-api:8000
      WAIT_TIMEOUT: 240